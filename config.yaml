# Keyboard Layout Scorer Configuration
# This file defines default settings and data file paths for all scoring methods

common:
  # Common settings across all scorers
  default_output_format: "detailed"  # detailed, csv, score-only
  letter_filtering: true  # Only analyze alphabetic characters
  quiet_mode: false
  
  # Default data directory structure
  data_directories:
    base: "input/"
    engram: "input/prep/"
    dvorak9: "input/dvorak9/"
    distance: "input/distance/"

# Physical distance-based scoring
distance_scorer:
  description: "Physical finger travel distance analysis with per-finger tracking and cross-hand filtering support"
  method: "Euclidean distance between key positions tracking cumulative finger movement with individual finger distance components"
  
  data_files:
    # Built-in position mapping (no external file needed)
    position_map: null
    
  scoring_options:
    distance_metric: "euclidean"  # euclidean, manhattan
    normalize_by_bigrams: true
    exclude_same_key: true
    ignore_cross_hand: false  # Filter bigrams that cross hands
    
  output:
    primary_score_name: "normalized_score"
    components:
      - "total_distance"
      - "average_distance" 
      - "max_distance"
      - "min_distance"
      - "coverage"
      - "left_finger1"
      - "left_finger2"
      - "left_finger3"
      - "left_finger4"
      - "right_finger1"
      - "right_finger2"
      - "right_finger3"
      - "right_finger4"

# Dvorak's 9 evaluation criteria with multiple scoring approaches
dvorak9_scorer:
  description: "Dvorak's 9 theoretical typing principles with four scoring approaches"
  method: "Pure, frequency-weighted, speed-weighted, and comfort-weighted evaluation of typing principles"
  
  data_files:
    frequencies:     "normalized_letter_pair_frequencies_en.csv"
    key_pair_scores: "key_pair_scores.csv"
    speed_weights:   "speed_weights.csv"    # automatically loaded if available
    comfort_weights: "comfort_weights.csv"  # automatically loaded if available
    
  scoring_options:
    # Available scoring approaches (all computed automatically)
    approaches: 
      - "pure_dvorak"           # Unweighted average of 9 criteria
      - "frequency_weighted"    # English bigram frequency-weighted
      - "speed_weighted"        # Empirical speed correlation weights (if available)
      - "comfort_weighted"      # Empirical comfort correlation weights (if available)

    default_approach: "frequency_weighted"
    ignore_cross_hand: false  # Filter bigrams that cross hands
    
    # Individual criteria (all 0-1 scale, higher = better)
    criteria:
      hands:           "Favor alternating hands over same hand"
      fingers:         "Avoid same finger repetition"
      skip_fingers:    "Favor non-adjacent fingers over adjacent"
      dont_cross_home: "Avoid crossing over the home row"
      same_row:        "Favor typing within the same row"
      home_row:        "Favor using the home row"
      columns:         "Favor fingers staying in designated columns"
      strum:           "Favor inward rolls over outward rolls"
      strong_fingers:  "Favor stronger fingers over weaker ones"
      
  output:
    primary_score_name: "layout_score"
    components:
      - "pure_dvorak_score"
      - "frequency_weighted_score"
      - "speed_weighted_score"      # if available
      - "comfort_weighted_score"    # if available
      - "hands"
      - "fingers" 
      - "skip_fingers"
      - "dont_cross_home"
      - "same_row"
      - "home_row"
      - "columns"
      - "strum"
      - "strong_fingers"

# Engram frequency and comfort-based scoring with dual modes
engram_scorer:
  description: "Letter frequency and key comfort combination scoring with 32-key and 24-key modes"
  method: "Multiplicative combination of item frequencies and position comfort for full layout and home block"
  
  data_files:
    item_scores: "normalized_letter_frequencies_en.csv"
    item_pair_scores: "normalized_letter_pair_frequencies_en.csv"
    position_scores: "normalized_key_comfort_scores_24keys.csv"
    position_pair_scores: "normalized_key_pair_comfort_scores_32keys_LvsRpairs.csv"
    
  scoring_options:
    # How to combine item and item-pair scores
    combination_strategy: "multiplicative"  # multiplicative, additive, weighted_additive
    
    # Weighted additive parameters (if using weighted_additive)
    item_weight:      0.25
    item_pair_weight: 0.75
    
    # Normalization method for input data
    normalization_method: "auto"  # auto, robust, linear, sqrt
    
    # Cross-hand filtering options
    ignore_cross_hand: false  # Filter bigrams that cross hands
    
    # Home block keys (24): qwerasdfzxcvuiopjkl;m,./
    home_block_keys: "qwerasdfzxcvuiopjkl;m,./"
    
  output:
    primary_score_name: "total_score_32key"
    components:
      - "total_score_32key"      # Full layout score
      - "total_score_24key"      # Home block only score
      - "item_component_32key"
      - "item_pair_component_32key"
      - "item_component_24key"
      - "item_pair_component_24key"
    
# Output formatting options
output_formats:
  csv:
    delimiter: ","
    include_headers: true
    precision: 6
    
  detailed:
    show_breakdown: true
    show_validation_info: true
    show_file_sources: false
    
  score_only:
    precision: 6
    separator: " "  # For multiple scores

# CLI argument standardization
cli:
  # Standard argument names across all scorers
  layout_args:
    letters:   ["--layout-letters", "--letters"]  # aliases
    positions: ["--layout-positions", "--positions", "--qwerty-keys"]
    
  input_args:
    data_dir:    ["--data-dir", "--input-dir"]
    config_file: ["--config", "--config-file"]
    text_file:   ["--text-file", "--text"]  # for distance scorer
    
  output_args:
    format:     ["--output-format", "--format"]
    csv:        ["--csv"]
    detailed:   ["--detailed", "--details"]
    score_only: ["--score-only", "--scores-only"]
    quiet:      ["--quiet", "-q"]
    
  scorer_specific:
    # Cross-hand filtering (available for all scorers)
    ignore_cross_hand: ["--ignore-cross-hand"]
    
    # Distance scorer specific
    text:              ["--text"]
    text_file:         ["--text-file"]
